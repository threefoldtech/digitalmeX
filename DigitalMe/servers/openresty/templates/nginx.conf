
user www www;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

error_log stderr notice;
daemon off;
pid logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    error_log /dev/stdout info;

    sendfile        on;
    keepalive_timeout  65;

    lua_shared_dict auto_ssl 1m;
    lua_shared_dict auto_ssl_settings 64k;
    resolver 8.8.8.8 ipv6=off;

    init_by_lua_block {
      auto_ssl = (require "resty.auto-ssl").new()
      auto_ssl:set("allow_domain", function(domain)
        return true
      end)
      auto_ssl:init()
    }

    init_worker_by_lua_block {
      auto_ssl:init_worker()
    }

    server {
      listen 443 ssl;
      ssl_certificate_by_lua_block {
        auto_ssl:ssl_certificate()
      }
      ssl_certificate /sandbox/cfg/ssl/resty-auto-ssl-fallback.crt;
      ssl_certificate_key /sandbox/cfg/ssl/resty-auto-ssl-fallback.key;
    }

    server {
      listen 80;
      {% if obj.letsencrypt %}
      location /.well-known/acme-challenge/ {
        content_by_lua_block {
          auto_ssl:challenge_server()
        }
      }
      {% endif %}
    }
    
    server {
      listen 8090 ssl;
      ssl_certificate_by_lua_block {
        auto_ssl:ssl_certificate()
      }
      ssl_certificate /sandbox/cfg/ssl/resty-auto-ssl-fallback.crt;
      ssl_certificate_key /sandbox/cfg/ssl/resty-auto-ssl-fallback.key;


      default_type text/html;
      location / {
        content_by_lua_block {
            require("lapis").serve("app")
            
        }
      }
      location /static/ {
        root {{obj._web_path}}/;
      }
    }

    server {
      listen 127.0.0.1:8999;
      client_body_buffer_size 128k;
      client_max_body_size 128k;

      location / {
        content_by_lua_block {
          auto_ssl:hook_server()
        }
      }
    }

    include servers/http_proxy/*.conf;

}

include servers/tcp_proxy/*.conf;